package TinyPlane;

class Plane3 {

  effects 
    output B sLanding     (h,(&(flap1,flap2)));
    output B sRollControl (h,(|(flap1,flap3)));

    FlapState flap1 (g1'(power1));
    FlapState flap2 (g1'(|(power1,power2)));//(|(g1'(power1),g2'(power2)));
    FlapState flap3 (g2'(power2));

    PowerState power1 { replace Power {
				FullPower : 0.002
				HalfPower : 0.002
		      }};
    PowerState power2 (f'(sLanding));

  maps
    f : PowerState --> B {
      {FullPower HalfPower} |--> UNDET
    };
    g1 : FlapState --> PowerState {
      {MovesOptimal MovesPartial } |--> FullPower
      {MovesAny MovesSlow } |--> HalfPower
    };
    g2 : FlapState --> PowerState {
      {MovesOptimal MovesSlow } |--> FullPower
      {MovesAny  MovesPartial } |--> HalfPower
    };
    h : FlapState --> B {
      {MovesOptimal MovesPartial MovesSlow MovesAny} |--> UNDET
    };

  components
	// no subcomponents 
} // class Plane3
