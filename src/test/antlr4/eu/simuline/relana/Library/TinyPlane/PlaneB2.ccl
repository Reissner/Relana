package TinyPlane;

class PlaneB2 extends Plane {

  effects 
    redeclare output B sLanding     (h,(&(flap1,flap2))); // (&(flap1,flap2))
    redeclare output B sRollControl (h,(|(flap1,flap3))); // (|(flap1,flap3))

    redeclare BoolFlapState flap1 (g'(power1));           // B flap1 (power1));
    redeclare BoolFlapState flap2 (g'(|(power1,power2))); // B flap2 (|(power1),power2);
    redeclare BoolFlapState flap3 (g'(power2));           // B flap3 (power2);


    redeclare BoolPowerState power1 { replace UNDET {Power:0.002}}; // B power1 {UNDET:0.002};
    redeclare BoolPowerState power2 (f'(sLanding));                 // B power2 (f'(sLanding));

  maps
    redeclare f : BoolPowerState --> B {
      {Power} |--> UNDET
    };
    g : BoolFlapState --> BoolPowerState {
      {Moves} |--> Power
    };
    h : BoolFlapState --> B {
      {Moves} |--> UNDET
    };

  components
	// no subcomponents 
} // class PlaneB2
