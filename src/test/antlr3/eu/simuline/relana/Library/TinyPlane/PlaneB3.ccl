package TinyPlane;

class PlaneB3 extends PlaneB2 {

  effects 
    //inherited: output B sLanding     (h,(&(flap1,flap2)));
    //inherited: output B sRollControl (h,(|(flap1,flap3)));

    redeclare FlapState flap1 (g1'(power1));           // BoolFlapState flap1 (g'(power1));
    redeclare FlapState flap2 (g1'(|(power1,power2))); // BoolFlapState flap2 (g'(|(power1,power2)));
    redeclare FlapState flap3 (g2'(power2));           // BoolFlapState flap3 (g'(power2));


    redeclare BoolPowerState power1 { replace UNDET {Power:0.002}}; // B power1 {UNDET:0.002};
    redeclare BoolPowerState power2 (f'(sLanding));                 // B power2 (f'(sLanding));

  maps
    redeclare f : BoolPowerState --> B {
      {FullPower HalfPower} |--> UNDET   // {Power} |--> UNDET
    };
/* inherited but nowhere used: replaced by g1 and g2 
    g : BoolFlapState --> BoolPowerState {
      {Moves} |--> Power
    };
*/
    g1 : FlapState --> PowerState {
      {MovesOptimal MovesPartial } |--> FullPower
      {MovesAny MovesSlow } |--> HalfPower
    };
    g2 : FlapState --> PowerState {
      {MovesOptimal MovesSlow } |--> FullPower
      {MovesAny  MovesPartial } |--> HalfPower
    };

    redeclare h : FlapState --> B {
      {MovesOptimal MovesPartial MovesSlow MovesAny} |--> UNDET // {Moves} |--> UNDET
    };

  components
	// no subcomponents 
} // class PlaneB3
